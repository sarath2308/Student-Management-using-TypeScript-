<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Management System</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background-color: #f9fafb;
        }

        .container {
            max-width: 1280px;
            margin: 0 auto;
            padding: 2rem;
        }

        table {
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            border-radius: 0.5rem;
            overflow: hidden;
        }

        th, td {
            padding: 1rem;
            border-bottom: 1px solid #e5e7eb;
        }

        th {
            background-color: #3b82f6;
            color: white;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        tr {
            transition: background-color 0.2s ease;
        }

        tr:hover {
            background-color: #f3f4f6;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            justify-content: center;
            align-items: center;
            z-index: 50;
        }

        .modal-content {
            background-color: white;
            padding: 1.5rem;
            border-radius: 0.5rem;
            width: 100%;
            max-width: 28rem;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            transform: translateY(-10px);
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from { transform: translateY(-20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .modal-content input {
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

        .modal-content input:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            outline: none;
        }

        .search-bar input {
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

        .search-bar input:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            outline: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-3xl font-bold text-gray-900 text-center mb-8">Student Management System</h1>

        <div class="flex justify-between items-center mb-6">
            <div class="search-bar">
                <input type="text" id="searchInput" placeholder="Search by name, email, or phone..." class="w-80 px-4 py-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200">
            </div>
            <button onclick="openAddModal()" class="bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-lg transition duration-200">Add New Student</button>
        </div>

        <table class="w-full bg-white">
            <thead>
                <tr>
                    <th class="text-left">ID</th>
                    <th class="text-left">Name</th>
                    <th class="text-left">Email</th>
                    <th class="text-left">Phone</th>
                    <th class="text-left">Actions</th>
                </tr>
            </thead>
            <tbody id="studentTableBody">
                <!-- Student data will be populated dynamically -->
            </tbody>
        </table>

        <!-- Modal for Adding/Editing Student -->
        <div id="studentModal" class="modal">
            <div class="modal-content">
                <h2 id="modalTitle" class="text-xl font-semibold mb-4">Add Student</h2>
                <input type="hidden" id="studentId">
                <input type="text" id="studentName" placeholder="Name" class="w-full px-3 py-2 mb-3 border border-gray-300 rounded-lg">
                <input type="email" id="studentEmail" placeholder="Email" class="w-full px-3 py-2 mb-3 border border-gray-300 rounded-lg">
                <input type="tel" id="studentPhone" placeholder="Phone" class="w-full px-3 py-2 mb-3 border border-gray-300 rounded-lg">
                <div class="flex justify-end">
                    <button class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg mr-2 transition duration-200" onclick="closeModal()">Cancel</button>
                    <button class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg transition duration-200" onclick="saveStudent()">Save</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Static student data stored in an array
        let students = [
            { id: 1, name: "John Doe", email: "john.doe@example.com", phone: "(123) 456-7890" },
            { id: 2, name: "Jane Smith", email: "jane.smith@example.com", phone: "(234) 567-8901" },
            { id: 3, name: "Michael Brown", email: "michael.brown@example.com", phone: "(345) 678-9012" },
            { id: 4, name: "Emily Davis", email: "emily.davis@example.com", phone: "(456) 789-0123" },
            { id: 5, name: "William Johnson", email: "william.johnson@example.com", phone: "(567) 890-1234" }
        ];

        // Function to render the student table
        function renderTable(data = students) {
            const tableBody = document.getElementById('studentTableBody');
            tableBody.innerHTML = ''; // Clear existing rows
            data.forEach(student => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${student.id}</td>
                    <td>${student.name}</td>
                    <td>${student.email}</td>
                    <td>${student.phone}</td>
                    <td class="actions">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white px-3 py-1 rounded transition duration-200" onclick="editStudent(${student.id})">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded transition duration-200" onclick="deleteStudent(${student.id})">Delete</button>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        }

        // Initial render of the table
        renderTable();

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const filteredStudents = students.filter(student =>
                student.name.toLowerCase().includes(searchTerm) ||
                student.email.toLowerCase().includes(searchTerm) ||
                student.phone.toLowerCase().includes(searchTerm)
            );
            renderTable(filteredStudents);
        });

        function openAddModal() {
            document.getElementById('modalTitle').textContent = 'Add Student';
            document.getElementById('studentId').value = '';
            document.getElementById('studentName').value = '';
            document.getElementById('studentEmail').value = '';
            document.getElementById('studentPhone').value = '';
            document.getElementById('studentModal').style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('studentModal').style.display = 'none';
        }

        // Delete student function
        function deleteStudent(id) {
            if (confirm('Are you sure you want to delete this student?')) {
                students = students.filter(student => student.id !== id);
                renderTable();
            }
        }

        // Placeholder functions for other CRUD operations
        function saveStudent() {
            // Implement save logic (Create/Update)
            closeModal();
        }

        function editStudent(id) {
            // Implement edit logic
            document.getElementById('modalTitle').textContent = 'Edit Student';
            document.getElementById('studentModal').style.display = 'flex';
        }
    </script>
</body>
</html>